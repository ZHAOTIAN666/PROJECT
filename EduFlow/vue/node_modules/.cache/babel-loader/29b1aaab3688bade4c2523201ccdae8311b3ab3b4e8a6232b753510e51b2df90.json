{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nexport default {\n  name: \"Orders\",\n  data() {\n    return {\n      tableData: [],\n      pageNum: 1,\n      pageSize: 10,\n      total: 0,\n      orderNo: null,\n      loading: false,\n      fromVisible: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {},\n      ids: []\n    };\n  },\n  created() {\n    this.load(1);\n  },\n  methods: {\n    // Single delete\n    del(id) {\n      this.$confirm('Are you sure you want to delete this order?', 'Confirm Delete', {\n        type: \"warning\",\n        confirmButtonText: 'Delete',\n        cancelButtonText: 'Cancel'\n      }).then(response => {\n        this.$request.delete('/orders/delete/' + id).then(res => {\n          if (res.code === '200') {\n            this.$message.success('Order deleted successfully');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg);\n          }\n        });\n      }).catch(() => {\n        this.$message.info('Delete cancelled');\n      });\n    },\n    // Handle selection change\n    handleSelectionChange(rows) {\n      this.ids = rows.map(v => v.id);\n    },\n    // Batch delete\n    delBatch() {\n      if (!this.ids.length) {\n        this.$message.warning('Please select orders to delete');\n        return;\n      }\n      this.$confirm(`Are you sure you want to delete ${this.ids.length} selected orders?`, 'Confirm Batch Delete', {\n        type: \"warning\",\n        confirmButtonText: 'Delete',\n        cancelButtonText: 'Cancel'\n      }).then(response => {\n        this.$request.delete('/orders/delete/batch', {\n          data: this.ids\n        }).then(res => {\n          if (res.code === '200') {\n            this.$message.success('Orders deleted successfully');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg);\n          }\n        });\n      }).catch(() => {\n        this.$message.info('Batch delete cancelled');\n      });\n    },\n    // Load data with pagination\n    load(pageNum) {\n      if (pageNum) this.pageNum = pageNum;\n      this.loading = true;\n      this.$request.get('/orders/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          orderNo: this.orderNo\n        }\n      }).then(res => {\n        this.tableData = res.data?.list || [];\n        this.total = res.data?.total || 0;\n      }).catch(err => {\n        this.$message.error('Failed to load orders');\n        console.error(err);\n      }).finally(() => {\n        this.loading = false;\n      });\n    },\n    // Reset search\n    reset() {\n      this.orderNo = null;\n      this.load(1);\n    },\n    // Handle page change\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    }\n  }\n};","map":{"version":3,"names":["name","data","tableData","pageNum","pageSize","total","orderNo","loading","fromVisible","form","user","JSON","parse","localStorage","getItem","rules","ids","created","load","methods","del","id","$confirm","type","confirmButtonText","cancelButtonText","then","response","$request","delete","res","code","$message","success","error","msg","catch","info","handleSelectionChange","rows","map","v","delBatch","length","warning","get","params","list","err","console","finally","reset","handleCurrentChange"],"sources":["src/views/manager/Orders.vue"],"sourcesContent":["<template>\r\n  <div class=\"orders-container\">\r\n    <!-- Page Header -->\r\n    <div class=\"page-header\">\r\n      <h2>Course Orders Management</h2>\r\n      <p>Manage student course enrollments and payment orders</p>\r\n    </div>\r\n\r\n    <!-- Search Section -->\r\n    <div class=\"search-section\">\r\n      <div class=\"search-wrapper\">\r\n        <el-input\r\n            placeholder=\"Enter order number\"\r\n            v-model=\"orderNo\"\r\n            class=\"search-input\"\r\n            prefix-icon=\"el-icon-search\"\r\n            clearable>\r\n        </el-input>\r\n        <el-button\r\n            type=\"primary\"\r\n            @click=\"load(1)\"\r\n            class=\"search-btn\">\r\n          <i class=\"el-icon-search\"></i> Search\r\n        </el-button>\r\n        <el-button\r\n            type=\"info\"\r\n            @click=\"reset\"\r\n            class=\"reset-btn\">\r\n          <i class=\"el-icon-refresh\"></i> Reset\r\n        </el-button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Operation Section -->\r\n    <div class=\"operation-section\">\r\n      <div class=\"operation-left\">\r\n        <el-button\r\n            type=\"danger\"\r\n            @click=\"delBatch\"\r\n            class=\"delete-btn\"\r\n            :disabled=\"!ids.length\">\r\n          <i class=\"el-icon-delete\"></i> Batch Delete\r\n        </el-button>\r\n      </div>\r\n      <div class=\"stats-info\">\r\n        <el-tag type=\"info\" size=\"medium\">Total: {{ total }} orders</el-tag>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Table Section -->\r\n    <div class=\"table-section\">\r\n      <el-table\r\n          :data=\"tableData\"\r\n          stripe\r\n          @selection-change=\"handleSelectionChange\"\r\n          class=\"custom-table\"\r\n          empty-text=\"No orders available\"\r\n          header-row-class-name=\"table-header\"\r\n          v-loading=\"loading\"\r\n          element-loading-text=\"Loading orders...\">\r\n\r\n        <el-table-column type=\"selection\" width=\"55\" align=\"center\"></el-table-column>\r\n\r\n        <el-table-column prop=\"id\" label=\"ID\" width=\"80\" align=\"center\" sortable>\r\n          <template v-slot=\"scope\">\r\n            <el-tag size=\"mini\" type=\"info\">#{{ scope.row.id }}</el-tag>\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <el-table-column prop=\"courseName\" label=\"Course Name\" min-width=\"150\" show-overflow-tooltip>\r\n          <template v-slot=\"scope\">\r\n            <div class=\"course-cell\">\r\n              <i class=\"el-icon-reading\"></i>\r\n              <span>{{ scope.row.courseName }}</span>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <el-table-column prop=\"coachName\" label=\"Teacher\" min-width=\"120\" show-overflow-tooltip>\r\n          <template v-slot=\"scope\">\r\n            <div class=\"teacher-cell\">\r\n              <i class=\"el-icon-user\"></i>\r\n              <span>{{ scope.row.coachName }}</span>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <el-table-column prop=\"userName\" label=\"Student\" min-width=\"120\" show-overflow-tooltip>\r\n          <template v-slot=\"scope\">\r\n            <div class=\"student-cell\">\r\n              <i class=\"el-icon-user-solid\"></i>\r\n              <span>{{ scope.row.userName }}</span>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <el-table-column prop=\"orderNo\" label=\"Order Number\" min-width=\"140\" show-overflow-tooltip>\r\n          <template v-slot=\"scope\">\r\n            <div class=\"order-cell\">\r\n              <i class=\"el-icon-postcard\"></i>\r\n              <span class=\"order-no\">{{ scope.row.orderNo }}</span>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <el-table-column prop=\"price\" label=\"Price\" width=\"100\" show-overflow-tooltip>\r\n          <template v-slot=\"scope\">\r\n            <div class=\"price-cell\">\r\n              <i class=\"el-icon-price-tag\"></i>\r\n              <span class=\"price-amount\">{{ scope.row.price }}</span>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <el-table-column prop=\"time\" label=\"Order Time\" width=\"160\">\r\n          <template v-slot=\"scope\">\r\n            <div class=\"time-cell\">\r\n              <i class=\"el-icon-time\"></i>\r\n              <span>{{ scope.row.time }}</span>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <el-table-column label=\"Actions\" width=\"120\" align=\"center\" fixed=\"right\">\r\n          <template v-slot=\"scope\">\r\n            <el-button\r\n                type=\"danger\"\r\n                size=\"mini\"\r\n                @click=\"del(scope.row.id)\"\r\n                icon=\"el-icon-delete\"\r\n                class=\"action-btn\">\r\n              Delete\r\n            </el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <!-- Pagination -->\r\n      <div class=\"pagination-wrapper\">\r\n        <el-pagination\r\n            background\r\n            @current-change=\"handleCurrentChange\"\r\n            :current-page=\"pageNum\"\r\n            :page-sizes=\"[5, 10, 20, 50]\"\r\n            :page-size=\"pageSize\"\r\n            layout=\"total, sizes, prev, pager, next, jumper\"\r\n            :total=\"total\"\r\n            class=\"custom-pagination\">\r\n        </el-pagination>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"Orders\",\r\n  data() {\r\n    return {\r\n      tableData: [],\r\n      pageNum: 1,\r\n      pageSize: 10,\r\n      total: 0,\r\n      orderNo: null,\r\n      loading: false,\r\n      fromVisible: false,\r\n      form: {},\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      rules: {},\r\n      ids: []\r\n    }\r\n  },\r\n  created() {\r\n    this.load(1)\r\n  },\r\n  methods: {\r\n    // Single delete\r\n    del(id) {\r\n      this.$confirm('Are you sure you want to delete this order?', 'Confirm Delete', {\r\n        type: \"warning\",\r\n        confirmButtonText: 'Delete',\r\n        cancelButtonText: 'Cancel'\r\n      }).then(response => {\r\n        this.$request.delete('/orders/delete/' + id).then(res => {\r\n          if (res.code === '200') {\r\n            this.$message.success('Order deleted successfully')\r\n            this.load(1)\r\n          } else {\r\n            this.$message.error(res.msg)\r\n          }\r\n        })\r\n      }).catch(() => {\r\n        this.$message.info('Delete cancelled')\r\n      })\r\n    },\r\n\r\n    // Handle selection change\r\n    handleSelectionChange(rows) {\r\n      this.ids = rows.map(v => v.id)\r\n    },\r\n\r\n    // Batch delete\r\n    delBatch() {\r\n      if (!this.ids.length) {\r\n        this.$message.warning('Please select orders to delete')\r\n        return\r\n      }\r\n      this.$confirm(`Are you sure you want to delete ${this.ids.length} selected orders?`, 'Confirm Batch Delete', {\r\n        type: \"warning\",\r\n        confirmButtonText: 'Delete',\r\n        cancelButtonText: 'Cancel'\r\n      }).then(response => {\r\n        this.$request.delete('/orders/delete/batch', {data: this.ids}).then(res => {\r\n          if (res.code === '200') {\r\n            this.$message.success('Orders deleted successfully')\r\n            this.load(1)\r\n          } else {\r\n            this.$message.error(res.msg)\r\n          }\r\n        })\r\n      }).catch(() => {\r\n        this.$message.info('Batch delete cancelled')\r\n      })\r\n    },\r\n\r\n    // Load data with pagination\r\n    load(pageNum) {\r\n      if (pageNum) this.pageNum = pageNum\r\n      this.loading = true\r\n\r\n      this.$request.get('/orders/selectPage', {\r\n        params: {\r\n          pageNum: this.pageNum,\r\n          pageSize: this.pageSize,\r\n          orderNo: this.orderNo,\r\n        }\r\n      }).then(res => {\r\n        this.tableData = res.data?.list || []\r\n        this.total = res.data?.total || 0\r\n      }).catch(err => {\r\n        this.$message.error('Failed to load orders')\r\n        console.error(err)\r\n      }).finally(() => {\r\n        this.loading = false\r\n      })\r\n    },\r\n\r\n    // Reset search\r\n    reset() {\r\n      this.orderNo = null\r\n      this.load(1)\r\n    },\r\n\r\n    // Handle page change\r\n    handleCurrentChange(pageNum) {\r\n      this.load(pageNum)\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.orders-container {\r\n  padding: 20px;\r\n  background-color: #f5f7fa;\r\n  min-height: 100vh;\r\n}\r\n\r\n.page-header {\r\n  margin-bottom: 24px;\r\n  padding: 0 4px;\r\n}\r\n\r\n.page-header h2 {\r\n  margin: 0 0 8px 0;\r\n  color: #303133;\r\n  font-size: 24px;\r\n  font-weight: 600;\r\n}\r\n\r\n.page-header p {\r\n  margin: 0;\r\n  color: #909399;\r\n  font-size: 14px;\r\n}\r\n\r\n.search-section {\r\n  background: white;\r\n  padding: 24px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.1);\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.search-wrapper {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n}\r\n\r\n.search-input {\r\n  width: 280px;\r\n}\r\n\r\n.search-btn, .reset-btn {\r\n  min-width: 100px;\r\n}\r\n\r\n.operation-section {\r\n  background: white;\r\n  padding: 20px 24px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.1);\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.operation-left {\r\n  display: flex;\r\n  gap: 12px;\r\n}\r\n\r\n.delete-btn {\r\n  min-width: 130px;\r\n}\r\n\r\n.stats-info {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.table-section {\r\n  background: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.1);\r\n  overflow: hidden;\r\n}\r\n\r\n.custom-table {\r\n  width: 100%;\r\n}\r\n\r\n.custom-table /deep/ .table-header {\r\n  background: #f8f9fa !important;\r\n}\r\n\r\n.custom-table /deep/ .table-header th {\r\n  background: #f8f9fa !important;\r\n  color: #606266 !important;\r\n  font-weight: 600 !important;\r\n  border-bottom: 2px solid #e4e7ed !important;\r\n}\r\n\r\n.custom-table /deep/ .el-table__row:hover {\r\n  background-color: #f5f7fa;\r\n}\r\n\r\n.course-cell, .teacher-cell, .student-cell, .order-cell, .price-cell, .time-cell {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n}\r\n\r\n.course-cell i {\r\n  color: #409eff;\r\n}\r\n\r\n.teacher-cell i {\r\n  color: #67c23a;\r\n}\r\n\r\n.student-cell i {\r\n  color: #909399;\r\n}\r\n\r\n.order-cell i {\r\n  color: #e6a23c;\r\n}\r\n\r\n.order-no {\r\n  font-family: 'Courier New', monospace;\r\n  font-size: 12px;\r\n}\r\n\r\n.price-cell i {\r\n  color: #f56c6c;\r\n}\r\n\r\n.price-amount {\r\n  font-weight: 600;\r\n  color: #f56c6c;\r\n}\r\n\r\n.time-cell i {\r\n  color: #c0c4cc;\r\n}\r\n\r\n.action-btn {\r\n  margin: 0;\r\n}\r\n\r\n.pagination-wrapper {\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 24px;\r\n  background: white;\r\n  border-top: 1px solid #e4e7ed;\r\n}\r\n\r\n.custom-pagination {\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n/* Responsive design */\r\n@media (max-width: 768px) {\r\n  .orders-container {\r\n    padding: 16px;\r\n  }\r\n\r\n  .search-wrapper {\r\n    flex-direction: column;\r\n    align-items: stretch;\r\n  }\r\n\r\n  .search-input {\r\n    width: 100%;\r\n  }\r\n\r\n  .operation-section {\r\n    flex-direction: column;\r\n    gap: 16px;\r\n    align-items: stretch;\r\n  }\r\n\r\n  .operation-left {\r\n    justify-content: center;\r\n  }\r\n\r\n  .delete-btn {\r\n    width: 100%;\r\n  }\r\n}\r\n\r\n/* Hover Effects */\r\n.search-btn:hover, .reset-btn:hover, .delete-btn:hover {\r\n  transform: translateY(-1px);\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n}\r\n\r\n.action-btn:hover {\r\n  transform: translateY(-1px);\r\n}\r\n\r\n/* Animation */\r\n.orders-container {\r\n  animation: fadeIn 0.3s ease-in-out;\r\n}\r\n\r\n@keyframes fadeIn {\r\n  from {\r\n    opacity: 0;\r\n    transform: translateY(10px);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n}\r\n</style>"],"mappings":";;AA2JA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;MACAC,OAAA;MACAC,QAAA;MACAC,KAAA;MACAC,OAAA;MACAC,OAAA;MACAC,WAAA;MACAC,IAAA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,KAAA;MACAC,GAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,IAAA;EACA;EACAC,OAAA;IACA;IACAC,IAAAC,EAAA;MACA,KAAAC,QAAA;QACAC,IAAA;QACAC,iBAAA;QACAC,gBAAA;MACA,GAAAC,IAAA,CAAAC,QAAA;QACA,KAAAC,QAAA,CAAAC,MAAA,qBAAAR,EAAA,EAAAK,IAAA,CAAAI,GAAA;UACA,IAAAA,GAAA,CAAAC,IAAA;YACA,KAAAC,QAAA,CAAAC,OAAA;YACA,KAAAf,IAAA;UACA;YACA,KAAAc,QAAA,CAAAE,KAAA,CAAAJ,GAAA,CAAAK,GAAA;UACA;QACA;MACA,GAAAC,KAAA;QACA,KAAAJ,QAAA,CAAAK,IAAA;MACA;IACA;IAEA;IACAC,sBAAAC,IAAA;MACA,KAAAvB,GAAA,GAAAuB,IAAA,CAAAC,GAAA,CAAAC,CAAA,IAAAA,CAAA,CAAApB,EAAA;IACA;IAEA;IACAqB,SAAA;MACA,UAAA1B,GAAA,CAAA2B,MAAA;QACA,KAAAX,QAAA,CAAAY,OAAA;QACA;MACA;MACA,KAAAtB,QAAA,yCAAAN,GAAA,CAAA2B,MAAA;QACApB,IAAA;QACAC,iBAAA;QACAC,gBAAA;MACA,GAAAC,IAAA,CAAAC,QAAA;QACA,KAAAC,QAAA,CAAAC,MAAA;UAAA5B,IAAA,OAAAe;QAAA,GAAAU,IAAA,CAAAI,GAAA;UACA,IAAAA,GAAA,CAAAC,IAAA;YACA,KAAAC,QAAA,CAAAC,OAAA;YACA,KAAAf,IAAA;UACA;YACA,KAAAc,QAAA,CAAAE,KAAA,CAAAJ,GAAA,CAAAK,GAAA;UACA;QACA;MACA,GAAAC,KAAA;QACA,KAAAJ,QAAA,CAAAK,IAAA;MACA;IACA;IAEA;IACAnB,KAAAf,OAAA;MACA,IAAAA,OAAA,OAAAA,OAAA,GAAAA,OAAA;MACA,KAAAI,OAAA;MAEA,KAAAqB,QAAA,CAAAiB,GAAA;QACAC,MAAA;UACA3C,OAAA,OAAAA,OAAA;UACAC,QAAA,OAAAA,QAAA;UACAE,OAAA,OAAAA;QACA;MACA,GAAAoB,IAAA,CAAAI,GAAA;QACA,KAAA5B,SAAA,GAAA4B,GAAA,CAAA7B,IAAA,EAAA8C,IAAA;QACA,KAAA1C,KAAA,GAAAyB,GAAA,CAAA7B,IAAA,EAAAI,KAAA;MACA,GAAA+B,KAAA,CAAAY,GAAA;QACA,KAAAhB,QAAA,CAAAE,KAAA;QACAe,OAAA,CAAAf,KAAA,CAAAc,GAAA;MACA,GAAAE,OAAA;QACA,KAAA3C,OAAA;MACA;IACA;IAEA;IACA4C,MAAA;MACA,KAAA7C,OAAA;MACA,KAAAY,IAAA;IACA;IAEA;IACAkC,oBAAAjD,OAAA;MACA,KAAAe,IAAA,CAAAf,OAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}