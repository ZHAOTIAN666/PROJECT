{"ast":null,"code":"import E from 'wangeditor';\nexport default {\n  name: 'MyExperience',\n  data() {\n    return {\n      user: {},\n      tableData: [],\n      pageNum: 1,\n      pageSize: 10,\n      total: 0,\n      form: {},\n      fromVisible: false,\n      editor: null,\n      viewData: null,\n      viewVisible: false,\n      rules: {\n        name: [{\n          required: true,\n          message: 'Please enter experience title',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  mounted() {\n    this.initUser();\n    this.load(1);\n  },\n  methods: {\n    initUser() {\n      try {\n        const userStr = localStorage.getItem('xm-user');\n        this.user = userStr ? JSON.parse(userStr) : {};\n      } catch (error) {\n        this.user = {};\n      }\n    },\n    viewEditor(content) {\n      this.viewData = content;\n      this.viewVisible = true;\n    },\n    initWangEditor(content) {\n      this.$nextTick(() => {\n        this.editor = new E('#editor');\n        this.editor.config.placeholder = 'Please enter content';\n        this.editor.config.uploadFileName = 'file';\n        this.editor.config.uploadImgServer = 'http://localhost:9090/files/wang/upload';\n        this.editor.create();\n        setTimeout(() => {\n          this.editor.txt.html(content);\n        });\n      });\n    },\n    handleAdd() {\n      this.form = {\n        userId: this.user.id,\n        role: this.user.role\n      };\n      this.initWangEditor('');\n      this.fromVisible = true;\n    },\n    handleEdit(row) {\n      this.form = JSON.parse(JSON.stringify(row));\n      this.initWangEditor(this.form.content);\n      this.fromVisible = true;\n    },\n    load(pageNum) {\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/experience/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          userId: this.user.id,\n          role: this.user.role\n        }\n      }).then(res => {\n        this.tableData = res.data?.list || [];\n        this.total = res.data?.total || 0;\n      }).catch(() => {\n        this.$message.error('Failed to load data');\n      });\n    },\n    save() {\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.form.content = this.editor.txt.html();\n          this.$request({\n            url: this.form.id ? '/experience/update' : '/experience/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              this.$message.success('Saved successfully');\n              this.load(1);\n              this.fromVisible = false;\n            } else {\n              this.$message.error(res.msg || 'Save failed');\n            }\n          }).catch(() => {\n            this.$message.error('Save failed');\n          });\n        }\n      });\n    },\n    del(id) {\n      this.$confirm('Are you sure you want to delete this experience?', 'Confirm Delete', {\n        type: \"warning\",\n        confirmButtonText: 'Delete',\n        cancelButtonText: 'Cancel'\n      }).then(() => {\n        this.$request.delete('/experience/delete/' + id).then(res => {\n          if (res.code === '200') {\n            this.$message.success('Deleted successfully');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg || 'Delete failed');\n          }\n        }).catch(() => {\n          this.$message.error('Delete failed');\n        });\n      }).catch(() => {});\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    }\n  }\n};","map":{"version":3,"names":["E","name","data","user","tableData","pageNum","pageSize","total","form","fromVisible","editor","viewData","viewVisible","rules","required","message","trigger","mounted","initUser","load","methods","userStr","localStorage","getItem","JSON","parse","error","viewEditor","content","initWangEditor","$nextTick","config","placeholder","uploadFileName","uploadImgServer","create","setTimeout","txt","html","handleAdd","userId","id","role","handleEdit","row","stringify","$request","get","params","then","res","list","catch","$message","save","$refs","formRef","validate","valid","url","method","code","success","msg","del","$confirm","type","confirmButtonText","cancelButtonText","delete","handleCurrentChange"],"sources":["src/views/front/MyExperience.vue"],"sourcesContent":["<template>\n  <div class=\"main-content\">\n    <div class=\"container\">\n      <!-- Header Section -->\n      <div class=\"header-section\">\n        <div class=\"header-left\">\n          <h1 class=\"page-title\">My Fitness Experience</h1>\n          <p class=\"page-subtitle\">Total: {{ total }} experiences</p>\n        </div>\n        <div class=\"header-right\">\n          <el-button type=\"primary\" class=\"add-btn\" @click=\"handleAdd\" icon=\"el-icon-plus\">\n            Share Experience\n          </el-button>\n        </div>\n      </div>\n\n      <!-- Table Section -->\n      <div class=\"table-section\">\n        <el-table :data=\"tableData\" stripe class=\"custom-table\">\n          <el-table-column prop=\"id\" label=\"ID\" width=\"80\" align=\"center\" sortable>\n            <template slot-scope=\"scope\">\n              <span class=\"id-badge\">#{{ scope.row.id }}</span>\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"name\" label=\"Experience Title\" show-overflow-tooltip></el-table-column>\n          <el-table-column prop=\"content\" label=\"Details\" show-overflow-tooltip width=\"120\">\n            <template slot-scope=\"scope\">\n              <el-button type=\"text\" @click=\"viewEditor(scope.row.content)\" class=\"view-btn\">\n                View Details\n              </el-button>\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"time\" label=\"Published Time\" width=\"150\"></el-table-column>\n          <el-table-column label=\"Actions\" width=\"160\" align=\"center\">\n            <template slot-scope=\"scope\">\n              <el-button plain type=\"primary\" size=\"mini\" @click=\"handleEdit(scope.row)\" icon=\"el-icon-edit\">\n                Edit\n              </el-button>\n              <el-button plain type=\"danger\" size=\"mini\" @click=\"del(scope.row.id)\" icon=\"el-icon-delete\">\n                Delete\n              </el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n\n        <div class=\"pagination-container\">\n          <el-pagination\n              background\n              @current-change=\"handleCurrentChange\"\n              :current-page=\"pageNum\"\n              :page-sizes=\"[5, 10, 20]\"\n              :page-size=\"pageSize\"\n              layout=\"total, prev, pager, next\"\n              :total=\"total\">\n          </el-pagination>\n        </div>\n      </div>\n    </div>\n\n    <!-- Experience Form Dialog -->\n    <el-dialog\n        title=\"Experience Information\"\n        :visible.sync=\"fromVisible\"\n        width=\"60%\"\n        :close-on-click-modal=\"false\"\n        destroy-on-close\n        class=\"custom-dialog\">\n      <el-form label-width=\"120px\" :model=\"form\" :rules=\"rules\" ref=\"formRef\" class=\"experience-form\">\n        <el-form-item prop=\"name\" label=\"Experience Title\">\n          <el-input v-model=\"form.name\" autocomplete=\"off\" placeholder=\"Enter experience title\"></el-input>\n        </el-form-item>\n        <el-form-item prop=\"content\" label=\"Experience Details\">\n          <div id=\"editor\" class=\"editor-container\"></div>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"fromVisible = false\">Cancel</el-button>\n        <el-button type=\"primary\" @click=\"save\" icon=\"el-icon-check\">Save</el-button>\n      </div>\n    </el-dialog>\n\n    <!-- View Experience Dialog -->\n    <el-dialog\n        title=\"Experience Details\"\n        :visible.sync=\"viewVisible\"\n        width=\"60%\"\n        :close-on-click-modal=\"false\"\n        destroy-on-close\n        class=\"custom-dialog\">\n      <div class=\"content-wrapper\">\n        <div v-html=\"viewData\" class=\"experience-content w-e-text w-e-text-container\"></div>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport E from 'wangeditor'\n\nexport default {\n  name: 'MyExperience',\n  data() {\n    return {\n      user: {},\n      tableData: [],\n      pageNum: 1,\n      pageSize: 10,\n      total: 0,\n      form: {},\n      fromVisible: false,\n      editor: null,\n      viewData: null,\n      viewVisible: false,\n      rules: {\n        name: [{ required: true, message: 'Please enter experience title', trigger: 'blur' }]\n      }\n    }\n  },\n  mounted() {\n    this.initUser()\n    this.load(1)\n  },\n  methods: {\n    initUser() {\n      try {\n        const userStr = localStorage.getItem('xm-user')\n        this.user = userStr ? JSON.parse(userStr) : {}\n      } catch (error) {\n        this.user = {}\n      }\n    },\n    viewEditor(content) {\n      this.viewData = content\n      this.viewVisible = true\n    },\n    initWangEditor(content) {\n      this.$nextTick(() => {\n        this.editor = new E('#editor')\n        this.editor.config.placeholder = 'Please enter content'\n        this.editor.config.uploadFileName = 'file'\n        this.editor.config.uploadImgServer = 'http://localhost:9090/files/wang/upload'\n        this.editor.create()\n        setTimeout(() => {\n          this.editor.txt.html(content)\n        })\n      })\n    },\n    handleAdd() {\n      this.form = {\n        userId: this.user.id,\n        role: this.user.role\n      }\n      this.initWangEditor('')\n      this.fromVisible = true\n    },\n    handleEdit(row) {\n      this.form = JSON.parse(JSON.stringify(row))\n      this.initWangEditor(this.form.content)\n      this.fromVisible = true\n    },\n    load(pageNum) {\n      if (pageNum) this.pageNum = pageNum\n      this.$request.get('/experience/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          userId: this.user.id,\n          role: this.user.role\n        }\n      }).then(res => {\n        this.tableData = res.data?.list || []\n        this.total = res.data?.total || 0\n      }).catch(() => {\n        this.$message.error('Failed to load data')\n      })\n    },\n    save() {\n      this.$refs.formRef.validate((valid) => {\n        if (valid) {\n          this.form.content = this.editor.txt.html()\n          this.$request({\n            url: this.form.id ? '/experience/update' : '/experience/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              this.$message.success('Saved successfully')\n              this.load(1)\n              this.fromVisible = false\n            } else {\n              this.$message.error(res.msg || 'Save failed')\n            }\n          }).catch(() => {\n            this.$message.error('Save failed')\n          })\n        }\n      })\n    },\n    del(id) {\n      this.$confirm('Are you sure you want to delete this experience?', 'Confirm Delete', {\n        type: \"warning\",\n        confirmButtonText: 'Delete',\n        cancelButtonText: 'Cancel'\n      }).then(() => {\n        this.$request.delete('/experience/delete/' + id).then(res => {\n          if (res.code === '200') {\n            this.$message.success('Deleted successfully')\n            this.load(1)\n          } else {\n            this.$message.error(res.msg || 'Delete failed')\n          }\n        }).catch(() => {\n          this.$message.error('Delete failed')\n        })\n      }).catch(() => {})\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.main-content {\n  background: linear-gradient(135deg, #f3f0ff 0%, #e5d3f7 100%);\n  min-height: 100vh;\n  padding: 40px 0;\n}\n\n.container {\n  width: 85%;\n  max-width: 1400px;\n  margin: 0 auto;\n}\n\n.header-section {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background: white;\n  border-radius: 16px;\n  padding: 30px;\n  margin-bottom: 30px;\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n}\n\n.page-title {\n  font-size: 28px;\n  font-weight: 700;\n  margin: 0 0 8px 0;\n  background: linear-gradient(135deg, #a855f7 0%, #c084fc 100%);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n}\n\n.page-subtitle {\n  color: #6b7280;\n  margin: 0;\n  font-size: 14px;\n}\n\n.add-btn {\n  background: linear-gradient(135deg, #a855f7 0%, #c084fc 100%);\n  border: none;\n  border-radius: 25px;\n  padding: 12px 24px;\n  font-weight: 600;\n  transition: all 0.3s ease;\n}\n\n.add-btn:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 8px 25px rgba(168, 85, 247, 0.3);\n}\n\n.table-section {\n  background: white;\n  border-radius: 16px;\n  padding: 30px;\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n}\n\n.custom-table {\n  border-radius: 8px;\n  overflow: hidden;\n}\n\n.custom-table /deep/ .el-table__header th {\n  background: #faf5ff !important;\n  color: #374151;\n  font-weight: 600;\n  border-bottom: 2px solid #e5e7eb;\n}\n\n.custom-table /deep/ .el-table__row:hover {\n  background: #faf5ff !important;\n}\n\n.id-badge {\n  background: linear-gradient(135deg, #a855f7 0%, #c084fc 100%);\n  color: white;\n  padding: 4px 8px;\n  border-radius: 12px;\n  font-size: 12px;\n  font-weight: 600;\n}\n\n.view-btn {\n  color: #a855f7;\n  font-weight: 600;\n}\n\n.view-btn:hover {\n  color: #7c3aed;\n}\n\n.pagination-container {\n  display: flex;\n  justify-content: center;\n  margin-top: 30px;\n  padding-top: 20px;\n  border-top: 1px solid #e5e7eb;\n}\n\n.custom-dialog /deep/ .el-dialog {\n  border-radius: 16px;\n}\n\n.custom-dialog /deep/ .el-dialog__header {\n  background: linear-gradient(135deg, #a855f7 0%, #c084fc 100%);\n  color: white;\n  padding: 25px 30px;\n}\n\n.custom-dialog /deep/ .el-dialog__title {\n  color: white;\n  font-weight: 600;\n}\n\n.custom-dialog /deep/ .el-dialog__headerbtn .el-dialog__close {\n  color: white;\n}\n\n.experience-form /deep/ .el-input__inner {\n  border-radius: 8px;\n  border: 2px solid #e5e7eb;\n}\n\n.experience-form /deep/ .el-input__inner:focus {\n  border-color: #a855f7;\n}\n\n.editor-container {\n  border: 2px solid #e5e7eb;\n  border-radius: 8px;\n  min-height: 300px;\n}\n\n.content-wrapper {\n  background: #faf5ff;\n  border-radius: 12px;\n  padding: 25px;\n  border: 1px solid #e5e7eb;\n}\n\n.experience-content {\n  line-height: 1.8;\n  color: #4b5563;\n}\n\n.dialog-footer {\n  text-align: right;\n  padding-top: 20px;\n  border-top: 1px solid #e5e7eb;\n}\n\n/* Responsive */\n@media (max-width: 768px) {\n  .main-content { padding: 20px 0; }\n  .container { width: 95%; }\n  .header-section { flex-direction: column; gap: 20px; text-align: center; }\n  .table-section { padding: 20px; }\n  .custom-dialog /deep/ .el-dialog { width: 95% !important; }\n}\n</style>\n\n<style>\n.experience-content p {\n  color: #4b5563 !important;\n  margin-bottom: 16px;\n}\n\n.experience-content h2 {\n  color: #a855f7 !important;\n  font-weight: 600;\n}\n\n.experience-content strong {\n  color: #a855f7 !important;\n}\n</style>"],"mappings":"AAiGA,OAAAA,CAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,IAAA;MACAC,SAAA;MACAC,OAAA;MACAC,QAAA;MACAC,KAAA;MACAC,IAAA;MACAC,WAAA;MACAC,MAAA;MACAC,QAAA;MACAC,WAAA;MACAC,KAAA;QACAZ,IAAA;UAAAa,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MACA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,QAAA;IACA,KAAAC,IAAA;EACA;EACAC,OAAA;IACAF,SAAA;MACA;QACA,MAAAG,OAAA,GAAAC,YAAA,CAAAC,OAAA;QACA,KAAApB,IAAA,GAAAkB,OAAA,GAAAG,IAAA,CAAAC,KAAA,CAAAJ,OAAA;MACA,SAAAK,KAAA;QACA,KAAAvB,IAAA;MACA;IACA;IACAwB,WAAAC,OAAA;MACA,KAAAjB,QAAA,GAAAiB,OAAA;MACA,KAAAhB,WAAA;IACA;IACAiB,eAAAD,OAAA;MACA,KAAAE,SAAA;QACA,KAAApB,MAAA,OAAAV,CAAA;QACA,KAAAU,MAAA,CAAAqB,MAAA,CAAAC,WAAA;QACA,KAAAtB,MAAA,CAAAqB,MAAA,CAAAE,cAAA;QACA,KAAAvB,MAAA,CAAAqB,MAAA,CAAAG,eAAA;QACA,KAAAxB,MAAA,CAAAyB,MAAA;QACAC,UAAA;UACA,KAAA1B,MAAA,CAAA2B,GAAA,CAAAC,IAAA,CAAAV,OAAA;QACA;MACA;IACA;IACAW,UAAA;MACA,KAAA/B,IAAA;QACAgC,MAAA,OAAArC,IAAA,CAAAsC,EAAA;QACAC,IAAA,OAAAvC,IAAA,CAAAuC;MACA;MACA,KAAAb,cAAA;MACA,KAAApB,WAAA;IACA;IACAkC,WAAAC,GAAA;MACA,KAAApC,IAAA,GAAAgB,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAqB,SAAA,CAAAD,GAAA;MACA,KAAAf,cAAA,MAAArB,IAAA,CAAAoB,OAAA;MACA,KAAAnB,WAAA;IACA;IACAU,KAAAd,OAAA;MACA,IAAAA,OAAA,OAAAA,OAAA,GAAAA,OAAA;MACA,KAAAyC,QAAA,CAAAC,GAAA;QACAC,MAAA;UACA3C,OAAA,OAAAA,OAAA;UACAC,QAAA,OAAAA,QAAA;UACAkC,MAAA,OAAArC,IAAA,CAAAsC,EAAA;UACAC,IAAA,OAAAvC,IAAA,CAAAuC;QACA;MACA,GAAAO,IAAA,CAAAC,GAAA;QACA,KAAA9C,SAAA,GAAA8C,GAAA,CAAAhD,IAAA,EAAAiD,IAAA;QACA,KAAA5C,KAAA,GAAA2C,GAAA,CAAAhD,IAAA,EAAAK,KAAA;MACA,GAAA6C,KAAA;QACA,KAAAC,QAAA,CAAA3B,KAAA;MACA;IACA;IACA4B,KAAA;MACA,KAAAC,KAAA,CAAAC,OAAA,CAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAlD,IAAA,CAAAoB,OAAA,QAAAlB,MAAA,CAAA2B,GAAA,CAAAC,IAAA;UACA,KAAAQ,QAAA;YACAa,GAAA,OAAAnD,IAAA,CAAAiC,EAAA;YACAmB,MAAA,OAAApD,IAAA,CAAAiC,EAAA;YACAvC,IAAA,OAAAM;UACA,GAAAyC,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAW,IAAA;cACA,KAAAR,QAAA,CAAAS,OAAA;cACA,KAAA3C,IAAA;cACA,KAAAV,WAAA;YACA;cACA,KAAA4C,QAAA,CAAA3B,KAAA,CAAAwB,GAAA,CAAAa,GAAA;YACA;UACA,GAAAX,KAAA;YACA,KAAAC,QAAA,CAAA3B,KAAA;UACA;QACA;MACA;IACA;IACAsC,IAAAvB,EAAA;MACA,KAAAwB,QAAA;QACAC,IAAA;QACAC,iBAAA;QACAC,gBAAA;MACA,GAAAnB,IAAA;QACA,KAAAH,QAAA,CAAAuB,MAAA,yBAAA5B,EAAA,EAAAQ,IAAA,CAAAC,GAAA;UACA,IAAAA,GAAA,CAAAW,IAAA;YACA,KAAAR,QAAA,CAAAS,OAAA;YACA,KAAA3C,IAAA;UACA;YACA,KAAAkC,QAAA,CAAA3B,KAAA,CAAAwB,GAAA,CAAAa,GAAA;UACA;QACA,GAAAX,KAAA;UACA,KAAAC,QAAA,CAAA3B,KAAA;QACA;MACA,GAAA0B,KAAA;IACA;IACAkB,oBAAAjE,OAAA;MACA,KAAAc,IAAA,CAAAd,OAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}