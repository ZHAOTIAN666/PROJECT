{"ast":null,"code":"export default {\n  name: \"AdminPerson\",\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      originalUser: {},\n      loading: false\n    };\n  },\n  created() {\n    // Store original user data for reset functionality\n    this.originalUser = JSON.parse(JSON.stringify(this.user));\n  },\n  methods: {\n    update() {\n      this.loading = true;\n      // Save current user information to database\n      this.$request.put('/admin/update', this.user).then(res => {\n        if (res.code === '200') {\n          // Successfully updated\n          this.$message.success('Profile updated successfully');\n\n          // Update user information in browser cache\n          localStorage.setItem('xm-user', JSON.stringify(this.user));\n\n          // Update original user data\n          this.originalUser = JSON.parse(JSON.stringify(this.user));\n\n          // Trigger parent component data update\n          this.$emit('update:user');\n        } else {\n          this.$message.error(res.msg);\n        }\n      }).catch(error => {\n        this.$message.error('Failed to update profile');\n        console.error('Update error:', error);\n      }).finally(() => {\n        this.loading = false;\n      });\n    },\n    handleAvatarSuccess(response, file, fileList) {\n      // Update user avatar property with uploaded image link\n      this.$set(this.user, 'avatar', response.data);\n      this.$message.success('Avatar uploaded successfully');\n    },\n    beforeAvatarUpload(file) {\n      const isJPGorPNG = file.type === 'image/jpeg' || file.type === 'image/png';\n      const isLt2M = file.size / 1024 / 1024 < 2;\n      if (!isJPGorPNG) {\n        this.$message.error('Avatar must be JPG or PNG format!');\n      }\n      if (!isLt2M) {\n        this.$message.error('Avatar size cannot exceed 2MB!');\n      }\n      return isJPGorPNG && isLt2M;\n    },\n    resetForm() {\n      // Reset form to original values\n      this.user = JSON.parse(JSON.stringify(this.originalUser));\n      this.$message.info('Form has been reset');\n    }\n  }\n};","map":{"version":3,"names":["name","data","user","JSON","parse","localStorage","getItem","originalUser","loading","created","stringify","methods","update","$request","put","then","res","code","$message","success","setItem","$emit","error","msg","catch","console","finally","handleAvatarSuccess","response","file","fileList","$set","beforeAvatarUpload","isJPGorPNG","type","isLt2M","size","resetForm","info"],"sources":["src/views/manager/AdminPerson.vue"],"sourcesContent":["<template>\r\n  <div class=\"profile-container\">\r\n    <el-card class=\"profile-card\" shadow=\"hover\">\r\n      <div slot=\"header\" class=\"card-header\">\r\n        <h3 class=\"card-title\">\r\n          <i class=\"el-icon-user\"></i>\r\n          Personal Profile\r\n        </h3>\r\n        <p class=\"card-subtitle\">Manage your account information</p>\r\n      </div>\r\n\r\n      <el-form :model=\"user\" label-width=\"120px\" class=\"profile-form\">\r\n        <!-- Avatar Upload Section -->\r\n        <div class=\"avatar-section\">\r\n          <div class=\"avatar-wrapper\">\r\n            <el-upload\r\n                class=\"avatar-uploader\"\r\n                :action=\"$baseUrl + '/files/upload'\"\r\n                :show-file-list=\"false\"\r\n                :on-success=\"handleAvatarSuccess\"\r\n                :before-upload=\"beforeAvatarUpload\">\r\n              <div class=\"avatar-container\">\r\n                <img v-if=\"user.avatar\" :src=\"user.avatar\" class=\"avatar\" />\r\n                <div v-else class=\"avatar-placeholder\">\r\n                  <i class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n                  <p class=\"upload-text\">Upload Avatar</p>\r\n                </div>\r\n                <div class=\"avatar-overlay\">\r\n                  <i class=\"el-icon-camera\"></i>\r\n                  <p>Change</p>\r\n                </div>\r\n              </div>\r\n            </el-upload>\r\n          </div>\r\n          <div class=\"avatar-tips\">\r\n            <p class=\"tip-title\">Avatar Guidelines</p>\r\n            <ul class=\"tip-list\">\r\n              <li>Recommended size: 200x200px</li>\r\n              <li>Format: JPG, PNG</li>\r\n              <li>Max size: 2MB</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Form Fields -->\r\n        <div class=\"form-content\">\r\n          <el-form-item label=\"Username\" prop=\"username\">\r\n            <el-input\r\n                v-model=\"user.username\"\r\n                placeholder=\"Username\"\r\n                disabled\r\n                prefix-icon=\"el-icon-user\">\r\n              <template slot=\"suffix\">\r\n                <el-tooltip content=\"Username cannot be changed\" placement=\"top\">\r\n                  <i class=\"el-icon-info\"></i>\r\n                </el-tooltip>\r\n              </template>\r\n            </el-input>\r\n          </el-form-item>\r\n\r\n          <el-form-item label=\"Full Name\" prop=\"name\">\r\n            <el-input\r\n                v-model=\"user.name\"\r\n                placeholder=\"Enter your full name\"\r\n                prefix-icon=\"el-icon-user-solid\"\r\n                clearable>\r\n            </el-input>\r\n          </el-form-item>\r\n\r\n          <el-form-item label=\"Phone Number\" prop=\"phone\">\r\n            <el-input\r\n                v-model=\"user.phone\"\r\n                placeholder=\"Enter your phone number\"\r\n                prefix-icon=\"el-icon-phone\"\r\n                clearable>\r\n            </el-input>\r\n          </el-form-item>\r\n\r\n          <el-form-item label=\"Email Address\" prop=\"email\">\r\n            <el-input\r\n                v-model=\"user.email\"\r\n                placeholder=\"Enter your email address\"\r\n                type=\"email\"\r\n                prefix-icon=\"el-icon-message\"\r\n                clearable>\r\n            </el-input>\r\n          </el-form-item>\r\n        </div>\r\n\r\n        <!-- Action Buttons -->\r\n        <div class=\"form-actions\">\r\n          <el-button\r\n              type=\"primary\"\r\n              @click=\"update\"\r\n              class=\"save-btn\"\r\n              :loading=\"loading\">\r\n            <i class=\"el-icon-check\"></i>\r\n            Save Changes\r\n          </el-button>\r\n          <el-button\r\n              @click=\"resetForm\"\r\n              class=\"reset-btn\">\r\n            <i class=\"el-icon-refresh\"></i>\r\n            Reset\r\n          </el-button>\r\n        </div>\r\n      </el-form>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"AdminPerson\",\r\n  data() {\r\n    return {\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      originalUser: {},\r\n      loading: false\r\n    }\r\n  },\r\n  created() {\r\n    // Store original user data for reset functionality\r\n    this.originalUser = JSON.parse(JSON.stringify(this.user))\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.loading = true\r\n      // Save current user information to database\r\n      this.$request.put('/admin/update', this.user).then(res => {\r\n        if (res.code === '200') {\r\n          // Successfully updated\r\n          this.$message.success('Profile updated successfully')\r\n\r\n          // Update user information in browser cache\r\n          localStorage.setItem('xm-user', JSON.stringify(this.user))\r\n\r\n          // Update original user data\r\n          this.originalUser = JSON.parse(JSON.stringify(this.user))\r\n\r\n          // Trigger parent component data update\r\n          this.$emit('update:user')\r\n        } else {\r\n          this.$message.error(res.msg)\r\n        }\r\n      }).catch(error => {\r\n        this.$message.error('Failed to update profile')\r\n        console.error('Update error:', error)\r\n      }).finally(() => {\r\n        this.loading = false\r\n      })\r\n    },\r\n    handleAvatarSuccess(response, file, fileList) {\r\n      // Update user avatar property with uploaded image link\r\n      this.$set(this.user, 'avatar', response.data)\r\n      this.$message.success('Avatar uploaded successfully')\r\n    },\r\n    beforeAvatarUpload(file) {\r\n      const isJPGorPNG = file.type === 'image/jpeg' || file.type === 'image/png'\r\n      const isLt2M = file.size / 1024 / 1024 < 2\r\n\r\n      if (!isJPGorPNG) {\r\n        this.$message.error('Avatar must be JPG or PNG format!')\r\n      }\r\n      if (!isLt2M) {\r\n        this.$message.error('Avatar size cannot exceed 2MB!')\r\n      }\r\n      return isJPGorPNG && isLt2M\r\n    },\r\n    resetForm() {\r\n      // Reset form to original values\r\n      this.user = JSON.parse(JSON.stringify(this.originalUser))\r\n      this.$message.info('Form has been reset')\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.profile-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  min-height: 100vh;\r\n  padding: 20px;\r\n  background-color: #f5f7fa;\r\n}\r\n\r\n.profile-card {\r\n  width: 100%;\r\n  max-width: 600px;\r\n  border-radius: 16px;\r\n  overflow: hidden;\r\n  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.profile-card /deep/ .el-card__header {\r\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n  color: white;\r\n  padding: 30px;\r\n  border-bottom: none;\r\n}\r\n\r\n.card-header {\r\n  text-align: center;\r\n}\r\n\r\n.card-title {\r\n  margin: 0 0 8px 0;\r\n  font-size: 24px;\r\n  font-weight: 600;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 8px;\r\n  color: white;\r\n}\r\n\r\n.card-subtitle {\r\n  margin: 0;\r\n  opacity: 0.9;\r\n  font-size: 14px;\r\n  color: white;\r\n}\r\n\r\n.profile-form {\r\n  padding: 40px 30px 30px;\r\n  background: white;\r\n}\r\n\r\n.avatar-section {\r\n  display: flex;\r\n  gap: 30px;\r\n  margin-bottom: 40px;\r\n  padding-bottom: 30px;\r\n  border-bottom: 1px solid #e4e7ed;\r\n}\r\n\r\n.avatar-wrapper {\r\n  flex-shrink: 0;\r\n}\r\n\r\n.avatar-container {\r\n  position: relative;\r\n  width: 120px;\r\n  height: 120px;\r\n  border-radius: 50%;\r\n  overflow: hidden;\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.avatar-container:hover {\r\n  transform: scale(1.05);\r\n}\r\n\r\n.avatar-container:hover .avatar-overlay {\r\n  opacity: 1;\r\n}\r\n\r\n.avatar {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n  border-radius: 50%;\r\n}\r\n\r\n.avatar-placeholder {\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: #f5f7fa;\r\n  border: 2px dashed #dcdfe6;\r\n  border-radius: 50%;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.avatar-placeholder:hover {\r\n  border-color: #667eea;\r\n  background: #ecf5ff;\r\n}\r\n\r\n.avatar-uploader-icon {\r\n  font-size: 32px;\r\n  color: #909399;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.upload-text {\r\n  margin: 0;\r\n  font-size: 12px;\r\n  color: #909399;\r\n}\r\n\r\n.avatar-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: rgba(102, 126, 234, 0.8);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: white;\r\n  opacity: 0;\r\n  transition: opacity 0.3s;\r\n  border-radius: 50%;\r\n}\r\n\r\n.avatar-overlay i {\r\n  font-size: 20px;\r\n  margin-bottom: 4px;\r\n}\r\n\r\n.avatar-overlay p {\r\n  margin: 0;\r\n  font-size: 12px;\r\n}\r\n\r\n.avatar-tips {\r\n  flex: 1;\r\n  padding-left: 20px;\r\n}\r\n\r\n.tip-title {\r\n  margin: 0 0 12px 0;\r\n  font-weight: 600;\r\n  color: #303133;\r\n  font-size: 14px;\r\n}\r\n\r\n.tip-list {\r\n  margin: 0;\r\n  padding-left: 16px;\r\n  color: #606266;\r\n  font-size: 13px;\r\n}\r\n\r\n.tip-list li {\r\n  margin-bottom: 6px;\r\n}\r\n\r\n.form-content {\r\n  margin-bottom: 40px;\r\n}\r\n\r\n.profile-form /deep/ .el-form-item {\r\n  margin-bottom: 24px;\r\n}\r\n\r\n.profile-form /deep/ .el-form-item__label {\r\n  font-weight: 600;\r\n  color: #303133;\r\n  line-height: 40px;\r\n}\r\n\r\n.profile-form /deep/ .el-input__inner {\r\n  height: 44px;\r\n  line-height: 44px;\r\n  border-radius: 8px;\r\n  border: 1px solid #dcdfe6;\r\n  transition: all 0.3s;\r\n  font-size: 14px;\r\n}\r\n\r\n.profile-form /deep/ .el-input__inner:focus {\r\n  border-color: #667eea;\r\n  box-shadow: 0 0 0 2px rgba(102, 126, 234, 0.2);\r\n}\r\n\r\n.profile-form /deep/ .el-input.is-disabled .el-input__inner {\r\n  background-color: #f5f7fa;\r\n  color: #909399;\r\n}\r\n\r\n.profile-form /deep/ .el-input__prefix,\r\n.profile-form /deep/ .el-input__suffix {\r\n  line-height: 44px;\r\n}\r\n\r\n.form-actions {\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 16px;\r\n  padding-top: 20px;\r\n  border-top: 1px solid #e4e7ed;\r\n}\r\n\r\n.save-btn, .reset-btn {\r\n  min-width: 120px;\r\n  height: 44px;\r\n  border-radius: 8px;\r\n  font-weight: 500;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.save-btn {\r\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n  border: none;\r\n  color: white;\r\n}\r\n\r\n.save-btn:hover {\r\n  background: linear-gradient(135deg, #5a6fd8 0%, #6a4190 100%);\r\n  transform: translateY(-1px);\r\n  box-shadow: 0 4px 12px rgba(102, 126, 234, 0.3);\r\n}\r\n\r\n.reset-btn {\r\n  background: #f5f7fa;\r\n  border: 1px solid #dcdfe6;\r\n  color: #606266;\r\n}\r\n\r\n.reset-btn:hover {\r\n  background: #ecf5ff;\r\n  border-color: #c0c4cc;\r\n  color: #303133;\r\n  transform: translateY(-1px);\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.avatar-uploader /deep/ .el-upload {\r\n  border: none;\r\n  border-radius: 50%;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n  width: 120px;\r\n  height: 120px;\r\n}\r\n\r\n/* Responsive Design */\r\n@media (max-width: 768px) {\r\n  .profile-container {\r\n    padding: 16px;\r\n  }\r\n\r\n  .profile-form {\r\n    padding: 30px 20px 20px;\r\n  }\r\n\r\n  .avatar-section {\r\n    flex-direction: column;\r\n    align-items: center;\r\n    text-align: center;\r\n    gap: 20px;\r\n  }\r\n\r\n  .avatar-tips {\r\n    padding-left: 0;\r\n  }\r\n\r\n  .form-actions {\r\n    flex-direction: column;\r\n  }\r\n\r\n  .save-btn, .reset-btn {\r\n    width: 100%;\r\n  }\r\n\r\n  .profile-form /deep/ .el-form-item__label {\r\n    text-align: left;\r\n  }\r\n}\r\n\r\n/* Loading Animation */\r\n.save-btn.is-loading {\r\n  pointer-events: none;\r\n}\r\n\r\n/* Success Animation */\r\n@keyframes successPulse {\r\n  0% {\r\n    box-shadow: 0 0 0 0 rgba(102, 126, 234, 0.7);\r\n  }\r\n  70% {\r\n    box-shadow: 0 0 0 10px rgba(102, 126, 234, 0);\r\n  }\r\n  100% {\r\n    box-shadow: 0 0 0 0 rgba(102, 126, 234, 0);\r\n  }\r\n}\r\n\r\n.form-success {\r\n  animation: successPulse 0.6s ease-out;\r\n}\r\n\r\n/* 深色模式支持 */\r\n@media (prefers-color-scheme: dark) {\r\n  .profile-container {\r\n    background-color: #1a1a1a;\r\n  }\r\n\r\n  .profile-card {\r\n    background: #2d2d2d;\r\n  }\r\n\r\n  .profile-form {\r\n    background: #2d2d2d;\r\n  }\r\n\r\n  .tip-title {\r\n    color: #ffffff;\r\n  }\r\n\r\n  .tip-list {\r\n    color: #cccccc;\r\n  }\r\n\r\n  .profile-form /deep/ .el-form-item__label {\r\n    color: #ffffff;\r\n  }\r\n\r\n  .profile-form /deep/ .el-input__inner {\r\n    background-color: #333333;\r\n    border-color: #4c4d4f;\r\n    color: #ffffff;\r\n  }\r\n\r\n  .profile-form /deep/ .el-input.is-disabled .el-input__inner {\r\n    background-color: #404040;\r\n    color: #cccccc;\r\n  }\r\n\r\n  .avatar-placeholder {\r\n    background: #404040;\r\n    border-color: #4c4d4f;\r\n  }\r\n\r\n  .upload-text {\r\n    color: #cccccc;\r\n  }\r\n\r\n  .avatar-uploader-icon {\r\n    color: #cccccc;\r\n  }\r\n\r\n  .reset-btn {\r\n    background: #404040;\r\n    border-color: #4c4d4f;\r\n    color: #cccccc;\r\n  }\r\n\r\n  .reset-btn:hover {\r\n    background: #4c4d4f;\r\n    border-color: #666666;\r\n    color: #ffffff;\r\n  }\r\n}\r\n</style>"],"mappings":"AAgHA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,YAAA;MACAC,OAAA;IACA;EACA;EACAC,QAAA;IACA;IACA,KAAAF,YAAA,GAAAJ,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAO,SAAA,MAAAR,IAAA;EACA;EACAS,OAAA;IACAC,OAAA;MACA,KAAAJ,OAAA;MACA;MACA,KAAAK,QAAA,CAAAC,GAAA,uBAAAZ,IAAA,EAAAa,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA;UACA,KAAAC,QAAA,CAAAC,OAAA;;UAEA;UACAd,YAAA,CAAAe,OAAA,YAAAjB,IAAA,CAAAO,SAAA,MAAAR,IAAA;;UAEA;UACA,KAAAK,YAAA,GAAAJ,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAO,SAAA,MAAAR,IAAA;;UAEA;UACA,KAAAmB,KAAA;QACA;UACA,KAAAH,QAAA,CAAAI,KAAA,CAAAN,GAAA,CAAAO,GAAA;QACA;MACA,GAAAC,KAAA,CAAAF,KAAA;QACA,KAAAJ,QAAA,CAAAI,KAAA;QACAG,OAAA,CAAAH,KAAA,kBAAAA,KAAA;MACA,GAAAI,OAAA;QACA,KAAAlB,OAAA;MACA;IACA;IACAmB,oBAAAC,QAAA,EAAAC,IAAA,EAAAC,QAAA;MACA;MACA,KAAAC,IAAA,MAAA7B,IAAA,YAAA0B,QAAA,CAAA3B,IAAA;MACA,KAAAiB,QAAA,CAAAC,OAAA;IACA;IACAa,mBAAAH,IAAA;MACA,MAAAI,UAAA,GAAAJ,IAAA,CAAAK,IAAA,qBAAAL,IAAA,CAAAK,IAAA;MACA,MAAAC,MAAA,GAAAN,IAAA,CAAAO,IAAA;MAEA,KAAAH,UAAA;QACA,KAAAf,QAAA,CAAAI,KAAA;MACA;MACA,KAAAa,MAAA;QACA,KAAAjB,QAAA,CAAAI,KAAA;MACA;MACA,OAAAW,UAAA,IAAAE,MAAA;IACA;IACAE,UAAA;MACA;MACA,KAAAnC,IAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAO,SAAA,MAAAH,YAAA;MACA,KAAAW,QAAA,CAAAoB,IAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}